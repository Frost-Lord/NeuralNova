<!DOCTYPE html>
<html lang="en">

<head>
    <title>NeuralNova - Dashboard</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="NeuralNova">
    <meta property="og:type" content="NeuralNova">
    <meta property="og:description" content="Deploy your own fully customisable AI for free!">
    <meta name="theme-color" content="#00bbff">
    <link rel="icon" type="image/png" href="/images/favicon.ico">
    <link rel="stylesheet" href="/css/global.css">
    <link rel="stylesheet" href="/css/dashboard/dashboard.css">
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
</head>

<body>
    <div class="container">
        <nav>
            <%- include('Sidebar.ejs') %>
        </nav>
        <main class="main">
            <div class="contentWrapper">
                <div class="cardbox-container">
                    <div class="course">
                        <div class="cardbox">
                            <h6>Status:</h6>
                            <br>
                            <button onclick="startBot()" style="background-color: #00c83c;">Start Bot</button><br><br>
                            <button onclick="stopBot()" style="background-color: #d70000;">Stop Bot</button><br><br>
                            <button onclick="restartBot()" style="background-color: #cff123;">Restart Bot</button>
                        </div>
                        <div class="botform">
                            <form>
                                <label for="tokenInput">Bot Token:</label>
                                <input type="text" id="tokenInput" name="tokenInput"><br><br>
                                <label for="mongoInput">MongoDB URL:</label>
                                <input type="text" id="mongoInput" name="mongoInput"><br><br>
                            </form>
                            <button class="btn">Update</button>
                        </div>
                    </div>
                </div>
                <br>
                <div class="cardbox-container">
                    <div class="course">
                        <div class="cardbox">
                            <h6>Bot logs:</h6>
                        </div>
                        <div class="botform">
                            <div class="logs-container">
                                <pre id="logs"></pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>


    <script>
        if (!"<%=user.id%>") window.location.replace("/login");
        const dockerid = window.location.href.split("/")[4];


        async function getLogs() {
            const response = await axios.post("/api/docker/logs", {
                dockerid: dockerid,
                userid: "<%=user.id%>"
            });

            document.getElementById("logs").innerHTML = response.data.logs;
        }
        getLogs();
        setInterval(getLogs, 15000);


        async function StatusCode(data) {
            if (data.statusCode == 200) {
                alert(data.message)
            } else {
                alert(data.error)
            }
        }

        async function updateBotData() {
            const token = document.getElementById("tokenInput").value;
            const mongo = document.getElementById("mongoInput").value;
            const data = {
                token: token,
                mongo: mongo
            }
            const response = await axios.post("/api/docker/update", data);
            StatusCode(response.data);
        }

        async function startBot() {
            const response = await axios.post("/api/docker/start", {
                dockerid: dockerid,
                userid: "<%=user.id%>"
            });
            StatusCode(response.data);
        }

        async function stopBot() {
            const response = await axios.post("/api/docker/stop", {
                dockerid: dockerid,
                userid: "<%=user.id%>"
            });
            StatusCode(response.data);
        }

        async function restartBot() {
            const response = await axios.post("/api/docker/restart", {
                dockerid: dockerid,
                userid: "<%=user.id%>"
            });
            StatusCode(response.data);
        }


    </script>

</body>

</html>